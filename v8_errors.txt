error: src/json11.cc: No such file or directory
error: src/json11.hpp: No such file or directory
error: src/taint_log_record.cc: No such file or directory
error: src/taint_log_record.h: No such file or directory
error: src/taint_tracking.cc: No such file or directory
error: src/taint_tracking/taint_tracking.cc: No such file or directory
error: src/taint_tracking/picosha2.h: No such file or directory

no such errors if use patch -p1 > patch_file

LookupSingleCharacterStringFromCode
MakeOrFindTwoCharacterString
里面都有taint tracking吧
只有直接返回result的地方是➕tainttracking的
而且区分不同的new string方法 


NewProperSubString+
NewExternalStringFromOneByte+
NewExternalStringFromTwoByte+
NewConsString+
MakeOrFindTwoCharacterString+
LookupSingleCharacterStringFromCode+


error:
ld.lld: error: undefined symbol: tainttracking::webkit::StringTaint::InitTaintData(WTF::StringImpl*)
reason: 
file not spicified in BUILD.gn

../../v8/src/taint_tracking.h:287:19: error: no type named 'JSRegExp' in namespace 'v8::internal'
#include "src/objects/js-regexp.h"
#include "src/objects/js-array-buffer.h"
in v8/src/taint_tracking.h


  // A taint type stores a single byte of taint information about a single
  // character of string data. The most significant three bits are used for the
  // encoding and the last significant 5 bits are used for the taint type.
  //
  // 0 0 0      0 0 0 0 0
  // \___/      \_______/
  //   |            |
  // encoding    taint type


  ../../v8/src/taint_tracking/ast_serialization.cc:148:10: error: no viable conversion from 'Handle<v8::internal::Oddball>' to 'v8::internal::Object'

  ../../v8/src/taint_tracking/ast_serialization.cc:148:18: error: no viable conversion from 'Handle<v8::internal::Oddball>' to 'Handle<v8::internal::Object>'

  ../../v8/src/taint_tracking/ast_serialization.cc:225:16: error: no viable conversion from 'Handle<v8::internal::Handle<v8::internal::Oddball>>' to 'Handle<v8::internal::Object>'

  Handle<Object> undefined_value = Handle<Object>::cast(isolate_->factory()->undefined_value());



// Most object types in the V8 JavaScript are described in this file.
//
// Inheritance hierarchy:
// - Object
//   - Smi          (immediate small integer)
//   - TaggedIndex  (properly sign-extended immediate small integer)
//   - HeapObject   
//     (superclass for everything allocated in the heap, it has only one filed:
//     pointer to its map)
//     - JSReceiver  (suitable for property access)
//       - JSObject
//         - JSArray
//         - JSArrayBuffer
//         - JSArrayBufferView
//           - JSTypedArray
//           - JSDataView
//         - JSCollection
//           - JSSet
//           - JSMap
//         - JSCustomElementsObject (may have elements despite empty FixedArray)
//           - JSSpecialObject (requires custom property lookup handling)
//             - JSGlobalObject
//             - JSGlobalProxy
//             - JSModuleNamespace
//           - JSPrimitiveWrapper
//         - JSDate
//         - JSFunctionOrBoundFunction
//           - JSBoundFunction
//           - JSFunction
//         - JSGeneratorObject
//         - JSMapIterator
//         - JSMessageObject
//         - JSRegExp
//         - JSSetIterator
//         - JSStringIterator
//         - JSWeakCollection
//           - JSWeakMap
//           - JSWeakSet
//         - JSCollator            // If V8_INTL_SUPPORT enabled.
//         - JSDateTimeFormat      // If V8_INTL_SUPPORT enabled.
//         - JSDisplayNames        // If V8_INTL_SUPPORT enabled.
//         - JSListFormat          // If V8_INTL_SUPPORT enabled.
//         - JSLocale              // If V8_INTL_SUPPORT enabled.
//         - JSNumberFormat        // If V8_INTL_SUPPORT enabled.
//         - JSPluralRules         // If V8_INTL_SUPPORT enabled.
//         - JSRelativeTimeFormat  // If V8_INTL_SUPPORT enabled.
//         - JSSegmenter           // If V8_INTL_SUPPORT enabled.
//         - JSSegments            // If V8_INTL_SUPPORT enabled.
//         - JSSegmentIterator     // If V8_INTL_SUPPORT enabled.
//         - JSV8BreakIterator     // If V8_INTL_SUPPORT enabled.
//         - WasmExceptionObject
//         - WasmGlobalObject
//         - WasmInstanceObject
//         - WasmMemoryObject
//         - WasmModuleObject
//         - WasmTableObject
//       - JSProxy
//     - FixedArrayBase
//       - ByteArray
//       - BytecodeArray
//       - FixedArray
//         - HashTable
//           - Dictionary
//           - StringTable
//           - StringSet
//           - CompilationCacheTable
//           - MapCache
//         - OrderedHashTable
//           - OrderedHashSet
//           - OrderedHashMap
//         - FeedbackMetadata
//         - TemplateList
//         - TransitionArray
//         - ScopeInfo
//         - SourceTextModuleInfo
//         - ScriptContextTable
//         - ClosureFeedbackCellArray
//       - FixedDoubleArray
//     - PrimitiveHeapObject
//       - BigInt
//       - HeapNumber
//       - Name
//         - String
//           - SeqString
//             - SeqOneByteString
//             - SeqTwoByteString
//           - SlicedString
//           - ConsString
//           - ThinString
//           - ExternalString
//             - ExternalOneByteString
//             - ExternalTwoByteString
//           - InternalizedString
//             - SeqInternalizedString
//               - SeqOneByteInternalizedString
//               - SeqTwoByteInternalizedString
//             - ConsInternalizedString
//             - ExternalInternalizedString
//               - ExternalOneByteInternalizedString
//               - ExternalTwoByteInternalizedString
//         - Symbol
//       - Oddball
//     - Context
//       - NativeContext
//     - Cell
//     - DescriptorArray
//     - PropertyCell
//     - PropertyArray
//     - Code
//     - AbstractCode, a wrapper around Code or BytecodeArray
//     - Map
//     - Foreign
//     - SmallOrderedHashTable
//       - SmallOrderedHashMap
//       - SmallOrderedHashSet
//     - SharedFunctionInfo
//     - Struct
//       - AccessorInfo
//       - AsmWasmData
//       - PromiseReaction
//       - PromiseCapability
//       - AccessorPair
//       - AccessCheckInfo
//       - InterceptorInfo
//       - CallHandlerInfo
//       - EnumCache
//       - TemplateInfo
//         - FunctionTemplateInfo
//         - ObjectTemplateInfo
//       - Script
//       - DebugInfo
//       - BreakPoint
//       - BreakPointInfo
//       - CachedTemplateObject
//       - StackFrameInfo
//       - CodeCache
//       - PropertyDescriptorObject
//       - PrototypeInfo
//       - Microtask
//         - CallbackTask
//         - CallableTask
//         - PromiseReactionJobTask
//           - PromiseFulfillReactionJobTask
//           - PromiseRejectReactionJobTask
//         - PromiseResolveThenableJobTask
//       - Module
//         - SourceTextModule
//         - SyntheticModule
//       - SourceTextModuleInfoEntry
//     - FeedbackCell
//     - FeedbackVector
//     - PreparseData
//     - UncompiledData
//       - UncompiledDataWithoutPreparseData
//       - UncompiledDataWithPreparseData
//     - SwissNameDictionary
//
// Formats of Object::ptr_:
//  Smi:        [31 bit signed int] 0
//  HeapObject: [32 bit direct pointer] (4 byte aligned) | 01


Local<Context>
context->GetIsolate()

Handle<AllocationSite>
GetIsolate()


../../v8/src/taint_tracking/object_versioner.cc:270:27: error: no member named 'GetIsolate' in 'v8::internal::ArrayList'
NEVER_READ_ONLY_SPACE_IMPL(ArrayList)


v8::Isolate* Message::GetIsolate() const {
  i::Isolate* isolate = Utils::OpenHandle(this)->GetIsolate();
  return reinterpret_cast<Isolate*>(isolate);
}



../../v8/src/taint_tracking/ast_serialization.cc:227:16: error: no viable conversion from 'Handle<v8::internal::Oddball>' to 'Handle<v8::internal::Object>'

../../v8/src/api/api.cc:5666:60: error: no member named 'GetIsolate' in 'v8::internal::String'

add 
v8::Isolate* String::GetIsolate() const {
  i::Isolate* isolate = Utils::OpenHandle(this)->GetIsolate();
  return reinterpret_cast<Isolate*>(isolate);
}
in api.cc

no Getisolate in String
NEVER_READ_ONLY_SPACE_IMPL(String)


../../v8/src/taint_tracking/ast_serialization.cc:150:18: error: no viable conversion from 'Handle<v8::internal::Oddball>' to 'Handle<v8::internal::Object>'

../../v8/src/taint_tracking/ast_serialization.cc:165:12: error: member access into incomplete type 'v8::internal::LookupIterator'

add 
#include "src/objects/lookup.h"
#include "v8/src/roots/roots.h"
in v8/src/taint_tracking.h



../../v8/src/objects/lookup.h:119:39: error: member access into incomplete type 'v8::internal::Isolate'
  Heap* heap() const { return isolate_->heap(); }
                                      ^
../../v8/include/v8-internal.h:24:7: note: forward declaration of 'v8::internal::Isolate'
class Isolate;

move #include "src/objects/lookup.h"
to v8/src/taint_tracking/ast_serialization.h


../../v8/src/taint_tracking/symbolic_state.cc:267:55: error: member reference type 'v8::internal::Map' is not a pointer; did you mean to use '.'?
typeinfo << Handle<HeapObject>::cast(value)->map()->instance_type();
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
                                                  .





../../v8/src/taint_tracking/object_versioner.cc:442:18: error: no viable conversion from 'Handle<v8::internal::HeapNumber>' to 'Handle<v8::internal::HeapObject>'
                 isolate_->factory()->NewHeapNumber(tag.GetUniqueId()));
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

add #include "src/objects/heap-number.h"
in taint_tracking.h


add #include "src/heap/factory-inl.h"
in ../../v8/src/taint_tracking/ast_serialization.h

../../v8/src/strings/uri.cc:185:29: error: no matching function for call to 'GetTaintStatus'
      taint_data->push_back(tainttracking::GetTaintStatus(*uri, k));
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../v8/src/taint_tracking.h:269:30: note: candidate template ignored: could not match 'T *' against 'v8::internal::String'


      taint_data->push_back(tainttracking::GetTaintStatus(uri, k));

change the def in taint_tracking.cc


../../v8/src/taint_tracking/ast_serialization.cc:957:28: error: implicit conversion loses integer precision: 'std::vector<std::unique_ptr<tainttracking::SymbolicStackFrame>>::size_type' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]
  return executing_frames_.size();
  ~~~~~~ ~~~~~~~~~~~~~~~~~~^~~~~~

../../v8/src/taint_tracking/ast_serialization.cc:681:16: error: implicit conversion loses integer precision: 'std::vector<tainttracking::SymbolicMemorySlot>::size_type' (aka 'unsigned long') to 'uint32_t' (aka 'unsigned int') [-Werror,-Wshorten-64-to-32]
  return args_.size();
  ~~~~~~ ~~~~~~^~~~~~

change to 
size_t SymbolicStackFrame::NumArgs() const {
  return args_.size();
}



error: declaration requires an exit-time destructor [-Werror,-Wexit-time-destructors]
std::unique_ptr<LogListener> global_log_listener;

solution: 
std::unique_ptr<LogListener>& getGlobalLogListener() {
    static std::unique_ptr<LogListener> global_log_listener(new LogListener);
    return global_log_listener;
}

std::unique_ptr<LogListener>& global_log_listener = getGlobalLogListener();


// An Isolate is an independant copy of the V8 runtime which includes its own heap. Two different Isolates can run in parallel and can be seen as entirely different sandboxed instances of a V8 runtime.

/**
 * Isolate represents an isolated instance of the V8 engine.  V8 isolates have
 * completely separate states.  Objects from one isolate must not be used in
 * other isolates.  The embedder can create multiple isolates and use them in
 * parallel in multiple threads.  An isolate can be entered by at most one
 * thread at any given time.  The Locker/Unlocker API must be used to
 * synchronize.
 */


why do we need isolate in taint_tracker?


V8NodeLabelSerializer
has one variable: isolate_
need isolate to generate rawString
get isolate by Isolate::Current()
not sure


GenerateTaintTrackingHook
need an ASTnode to do the hook, that's why we need a proxy

v8 or v8::internal???


../../v8/src/taint_tracking/taint_tracking.cc:81:30: error: declaration requires an exit-time destructor [-Werror,-Wexit-time-destructors]


../../v8/src/taint_tracking/taint_tracking.cc:193:7: error: use of undeclared identifier 'FLAG_taint_tracking_write_packed_logs'

../../v8/src/json/json-stringifier.cc:899:32: error: type 'v8::internal::String' does not provide a subscript operator
          SrcChar next = (*src)[i + 1];
solution:
          SrcChar next = vector[i + 1];


MUST_USE_RESULT
->
V8_WARN_UNUSED_RESULT


in v8/src/heap/factory-base.cc


in v8/src/taint_tracking/taint_tracking.cc
how to get a Handle<String> from a String?
  V8_INLINE Handle(T object, Isolate* isolate);

how to get the isolate?


JSRegExp



../../v8/src/taint_tracking/taint_tracking.cc:454:11: error: no matching member function for call to 'CopyJsStringSlow'
          CopyJsStringSlow(out_reg.initSource(), String::cast(source));
          ^~~~~~~~~~~~~~~~


in v8/src/taint_tracking/ast_serialization.cc:
class FunctionLiteral final : public Expression {
 public:
  enum FunctionType {
    kAnonymousExpression,
    kNamedExpression,
    kDeclaration,
    kAccessorOrMethod
  };

  ->

  enum class FunctionSyntaxKind : uint8_t {
  kAnonymousExpression,
  kNamedExpression,
  kDeclaration,
  kAccessorOrMethod,
  kWrapped,

  kLastFunctionSyntaxKind = kWrapped,
};


in v8/src/objects/shared-function-info.h
  DECL_RELEASE_ACQUIRE_ACCESSORS(taint_node_label, Object)

  DECL_RELEASE_ACQUIRE_ACCESSORS(name_or_scope_info, Object)

add one parameter when calling


in function-kind.h
enum FunctionKind : uint8_t {
  // BEGIN constructable functions
  kNormalFunction,
  kModule,
  kAsyncModule,
  // BEGIN class constructors
  // BEGIN base constructors
  kBaseConstructor,
  // BEGIN default constructors
  kDefaultBaseConstructor,
  // END base constructors
  // BEGIN derived constructors
  kDefaultDerivedConstructor,
  // END default constructors
  kDerivedConstructor,
  // END derived constructors
  // END class constructors
  // END constructable functions.
  // BEGIN accessors
  kGetterFunction,
  kStaticGetterFunction,
  kSetterFunction,
  kStaticSetterFunction,
  // END accessors
  // BEGIN arrow functions
  kArrowFunction,
  // BEGIN async functions
  kAsyncArrowFunction,
  // END arrow functions
  kAsyncFunction,
  // BEGIN concise methods 1
  kAsyncConciseMethod,
  kStaticAsyncConciseMethod,
  // BEGIN generators
  kAsyncConciseGeneratorMethod,
  kStaticAsyncConciseGeneratorMethod,
  // END concise methods 1
  kAsyncGeneratorFunction,
  // END async functions
  kGeneratorFunction,
  // BEGIN concise methods 2
  kConciseGeneratorMethod,
  kStaticConciseGeneratorMethod,
  // END generators
  kConciseMethod,
  kStaticConciseMethod,
  kClassMembersInitializerFunction,
  kClassStaticInitializerFunction,
  // END concise methods 2

  kLastFunctionKind = kClassStaticInitializerFunction,
};




// in code-kind.h
#define CODE_KIND_LIST(V)       \
  V(BYTECODE_HANDLER)           \
  V(FOR_TESTING)                \
  V(BUILTIN)                    \
  V(REGEXP)                     \
  V(WASM_FUNCTION)              \
  V(WASM_TO_CAPI_FUNCTION)      \
  V(WASM_TO_JS_FUNCTION)        \
  V(JS_TO_WASM_FUNCTION)        \
  V(JS_TO_JS_FUNCTION)          \
  V(C_WASM_ENTRY)               \
  V(INTERPRETED_FUNCTION)       \
  V(BASELINE)                   \
  V(TURBOPROP)                  \
  V(TURBOFAN)

enum class CodeKind {
#define DEFINE_CODE_KIND_ENUM(name) name,
  CODE_KIND_LIST(DEFINE_CODE_KIND_ENUM)
#undef DEFINE_CODE_KIND_ENUM
};



../../v8/src/taint_tracking/taint_tracking.cc:532:24: error: no viable conversion from 'Handle<int>' to 'Handle<v8::internal::Object>'
        Handle<Object> serial_num = handle(
                       ^            ~~~~~~~

api_builder.setSerialNumber(shared->get_api_func_data().serial_number());


enum class VariableMode : uint8_t {
  // User declared variables:
  kLet,  // declared via 'let' declarations (first lexical)

  kConst,  // declared via 'const' declarations (last lexical)

  kVar,  // declared via 'var', and 'function' declarations

  // Variables introduced by the compiler:
  kTemporary,  // temporary variables (not user-visible), stack-allocated
               // unless the scope as a whole has forced context allocation

  kDynamic,  // always require dynamic lookup (we don't know
             // the declaration)

  kDynamicGlobal,  // requires dynamic lookup, but we know that the
                   // variable is global unless it has been shadowed
                   // by an eval-introduced variable

  kDynamicLocal,  // requires dynamic lookup, but we know that the
                  // variable is local and where it is unless it
                  // has been shadowed by an eval-introduced
                  // variable

  // Variables for private methods or accessors whose access require
  // brand check. Declared only in class scopes by the compiler
  // and allocated only in class contexts:
  kPrivateMethod,  // Does not coexist with any other variable with the same
                   // name in the same scope.

  kPrivateSetterOnly,  // Incompatible with variables with the same name but
                       // any mode other than kPrivateGetterOnly. Transition to
                       // kPrivateGetterAndSetter if a later declaration for the
                       // same name with kPrivateGetterOnly is made.

  kPrivateGetterOnly,  // Incompatible with variables with the same name but
                       // any mode other than kPrivateSetterOnly. Transition to
                       // kPrivateGetterAndSetter if a later declaration for the
                       // same name with kPrivateSetterOnly is made.

  kPrivateGetterAndSetter,  // Does not coexist with any other variable with the
                            // same name in the same scope.

  kLastLexicalVariableMode = kConst,
};




../../v8/src/heap/factory.cc:1042:26: error: redefinition of 'no_gc' with a different type: 'v8::internal::DisallowHeapAllocation' (aka 'PerThreadAssertScopeDebugOnly<HEAP_ALLOCATION_ASSERT, false>') vs 'v8::internal::DisallowGarbageCollection' (aka 'CombinationAssertScope<PerThreadAssertScopeDebugOnly<SAFEPOINTS_ASSERT, false>, PerThreadAssertScopeDebugOnly<HEAP_ALLOCATION_ASSERT, false>>')
  DisallowHeapAllocation no_gc;
                         ^
../../v8/src/heap/factory.cc:1035:29: note: previous definition is here
  DisallowGarbageCollection no_gc;
                            ^
  what's the purpose?



  ../../v8/src/heap/factory.cc:1237:61: error: no viable conversion from 'v8::internal::Context' to 'v8::internal::Handle<v8::internal::Context>'
    tainttracking::RuntimeOnCatch(isolate(), thrown_object, context);
                                                            ^~~~~~~
../../v8/src/handles/handles.h:89:7: note: candidate constructor (the implicit copy constructor) not viable: no known conversion from 'v8::internal::Context' to 'const v8::internal::Handle<v8::internal::Context> &' for 1st argument
class Handle final : public HandleBase {
      ^
../../v8/src/handles/handles.h:89:7: note: candidate constructor (the implicit move constructor) not viable: no known conversion from 'v8::internal::Context' to 'v8::internal::Handle<v8::internal::Context> &&' for 1st argument
../../v8/src/handles/handles.h:132:13: note: candidate template ignored: could not match 'Handle<type-parameter-0-0>' against 'v8::internal::Context'
  V8_INLINE Handle(Handle<S> handle) : HandleBase(handle) {}
            ^
../../v8/src/handles/handles.h:113:22: note: explicit constructor is not a candidate
  V8_INLINE explicit Handle(Address* location) : HandleBase(location) {
                     ^
../../v8/src/objects/tagged-impl.h:41:3: note: candidate function
  operator bool() const = delete;
  ^
../../v8/src/taint_tracking.h:424:65: note: passing argument to parameter 'context' here
                    v8::internal::Handle<v8::internal::Context> context);
                                                                ^
18 errors generated.



OnNewSlicedString
OnNewSubStringCopy

OnNewStringLiteral
OnNewExternalString



../../v8/src/taint_tracking/taint_tracking.cc:514:27: error: unused variable 'ser' [-Werror,-Wunused-variable]
        BuilderSerializer ser;
CHECK_EQ(Status::OK, ser.Serialize(fn.initFnLabel(), label));


参考两个isolate 转换
void Recorder::SetRecorder(
    Isolate* isolate,
    const std::shared_ptr<v8::metrics::Recorder>& embedder_recorder) {
  foreground_task_runner_ = V8::GetCurrentPlatform()->GetForegroundTaskRunner(
      reinterpret_cast<v8::Isolate*>(isolate));
  CHECK_NULL(embedder_recorder_);
  embedder_recorder_ = embedder_recorder;
}


../../v8/src/objects/shared-function-info-inl.h:119:73: error: use of undeclared identifier 'kTaintTrackingNodeLabel'

'kTaintTrackingNodeLabel' not defined

definition should be in /home/suzy/nwjs/src/out/nw/gen/v8/torque-generated/src/objects/shared-function-info-tq.inc
generated from
/home/suzy/nwjs/src/v8/src/objects/shared-function-info.tq

we see the generation of Offset variables
define variable in 
/home/suzy/nwjs/src/v8/src/objects/shared-function-info.tq



../../v8/src/builtins/builtins-string.cc:502:33: error: indirection requires pointer operand ('v8::internal::JSArrayBuffer' invalid)
len = static_cast<int>(taint_data.byte_length());
// if (!taint_data.byte_length()->ToInt32()) {
// THROW_NEW_ERROR_RETURN_FAILURE(
// isolate, NewTypeError(MessageTemplate::kInvalidArgument, taint_arg));
// }



->


if (!Object::cast(taint_data.byte_length())->ToInt32(&len)) {
THROW_NEW_ERROR_RETURN_FAILURE(
isolate, NewTypeError(MessageTemplate::kInvalidArgument, taint_arg));
}



../../v8/src/builtins/builtins-string.cc:523:10: error: no viable conversion from returned value of type 'v8::Handle<v8::internal::JSArrayBuffer>' (aka 'Local<v8::internal::JSArrayBuffer>') to function return type 'v8::internal::Object'

BUILTIN(StringPrototypeGetTaint) {
HandleScope scope(isolate);
TO_THIS_STRING(string, "String.prototype.__getTaint__");
return Object::cast(tainttracking::JSGetTaintStatus(string, isolate));
}


../../v8/src/execution/execution.cc:361:31: error: no member named 'undefined_value' in 'v8::internal::Heap'
      handle(isolate->heap()->undefined_value(), isolate));


../../v8/src/builtins/builtins-string.cc:523:10: error: no viable conversion from returned value of type 'v8::internal::JSArrayBuffer *' to function return type 'v8::internal::Object'


../../v8/src/taint_tracking.h:229:19: error: no type named 'SeqOneByteString' in namespace 'v8::internal'



../../v8/src/taint_tracking/ast_serialization.cc:3333:35: error: no member named 'proxy' in 'v8::internal::Declaration'
    HandleVariableProxyNode(node->proxy(), decl.initProxy());
                            ~~~~  ^
../../v8/src/taint_tracking/ast_serialization.cc:3334:42: error: no member named 'mode' in 'v8::internal::Declaration'
    decl.setMode(ToAstVariableMode(node->mode()));
                                   ~~~~  ^
../../v8/src/taint_tracking/ast_serialization.cc:3335:26: error: no member named 'scope' in 'v8::internal::Declaration'
    ReferenceScope(node->scope(), decl.initScope());
                   ~~~~  ^
别人用 Declaration 都是怎么用的。。。


 
../../v8/src/taint_tracking/ast_serialization.cc:3479:26: error: no member named 'next' in 'v8::internal::ForOfStatement'
    HandleVariable(node->next(), &variable);
                   ~~~~  ^

别人用 ForOfStatement 都是怎么用的。。。
HandleVariable(node->each(), &variable);

Variable* iterator_;
Expression* assign_iterator_;
Expression* next_result_;
Expression* result_done_;
Expression* assign_each_;

what is the purpose of VisitForOfStatement?

old:
stmt->assign_iterator()
new:
stmt->subject()



../../v8/src/taint_tracking/taint_tracking.cc:471:53: error: implicit conversion loses integer precision: 'std::vector<capnp::schemas::Flag_860d5c0f57b2e318>::size_type' (aka 'unsigned long') to 'unsigned int' [-Werror,-Wshorten-64-to-32]


../../v8/src/taint_tracking/taint_tracking.cc:619:9: error: attempt to use a deleted function
    if (native_context) {
        ^
../../v8/src/objects/tagged-impl.h:41:3: note: 'operator bool' has been explicitly marked deleted here
  operator bool() const = delete;

done


../../v8/src/taint_tracking/taint_tracking.cc:663:31: error: no member named 'CallOnBackgroundThread' in 'v8::Platform'
    V8::GetCurrentPlatform()->CallOnBackgroundThread(
    ~~~~~~~~~~~~~~~~~~~~~~~~  ^
done

../../v8/src/taint_tracking/taint_tracking.cc:525:24: error: no viable conversion from 'Handle<int>' to 'Handle<v8::internal::Object>'
done

../../v8/src/taint_tracking/taint_tracking.cc:582:49: error: no member named 'name' in 'v8::internal::Symbol'
            handle(Handle<Symbol>::cast(value)->name(), isolate)).
                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^


change to description